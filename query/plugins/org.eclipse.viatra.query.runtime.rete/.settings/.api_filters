<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<component id="org.eclipse.viatra.query.runtime.rete" version="2">
    <resource path="src/org/eclipse/viatra/query/runtime/rete/aggregation/ColumnAggregatorNode.java" type="org.eclipse.viatra.query.runtime.rete.aggregation.ColumnAggregatorNode">
        <filter comment="Use of aggregator api" id="643850349">
            <message_arguments>
                <message_argument value="IMultisetAggregationOperator&lt;Domain, Accumulator, AggregateResult&gt;"/>
                <message_argument value="ColumnAggregatorNode&lt;Domain, Accumulator, AggregateResult&gt;"/>
                <message_argument value="ColumnAggregatorNode(ReteContainer, IMultisetAggregationOperator&lt;Domain,Accumulator,AggregateResult&gt;, TupleMask, int)"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/rete/matcher/ReteBackendFactory.java" type="org.eclipse.viatra.query.runtime.rete.matcher.ReteBackendFactory">
        <filter comment="Adjusted implementation" id="338792546">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.rete.matcher.ReteBackendFactory"/>
                <message_argument value="create(Logger, IQueryRuntimeContext, IQueryCacheContext, IQueryBackendHintProvider)"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/rete/util/ReteHintOptions.java" type="org.eclipse.viatra.query.runtime.rete.util.ReteHintOptions">
        <filter id="336658481">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.rete.util.ReteHintOptions"/>
                <message_argument value="checkScopeBoundaries"/>
            </message_arguments>
        </filter>
    </resource>
</component>
