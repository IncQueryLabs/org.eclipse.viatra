package library.gen

import "library"


// 10x10x10 = 1000 person names
// 10x7x5x10 = 3500 titles 


pattern writerCandidate(first, last) {
	find writerFirstNameCandidate(first);
	find writerLastNameCandidate(last);
	neg find writerWithNames(_anyWriter, first, last);
}
pattern writerWithNames(writer, first, last) {
	Writer.firstName(writer, first);
	Writer.lastName(writer, last);
}

pattern writerFirstNameCandidate(name) {
	find firstName(first);
	find middleName(second);
	name == eval (first + second);
}
pattern writerLastNameCandidate(name) {
	find lastName(name);
}


pattern bookCandidate(title) {
	find titleCandidate(title);
	neg find bookWithTitle(_anyBook, title);
}

pattern bookWithTitle(book, title) {
	Book.title(book, title);
}

pattern titleCandidate(title) {
	find firstTitlePart(first);
	find secondTitlePart(second);
	find thirdTitlePart(third);
	find fourthTitlePart(fourth);
	title == eval (first + second + third + fourth);
}


pattern authorshipPriorityCandidate(book:Book, author:Writer) {
	neg find authorship(book, _anyAuthor);
	Writer(author);	
} or {
	neg find authorship(_anyBook, author);
	Book(book);
}

pattern authorshipCandidate(book:Book, author:Writer) {
	neg find authorship(book, author);
}

pattern authorship(book, author) {
	Book.writers(book, author);
}


pattern citationCandidate(source: Book, target: Book) {
	source != target;
	neg find citation(source, target);
}
pattern citation(source, target) {
	Book.citations(source, target);
}

