/*******************************************************************************
 * Copyright (c) 2010-2015, Csaba Debreceni, Istvan Rath and Daniel Varro
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Csaba Debreceni - initial API and implementation
 *******************************************************************************/
package org.eclipse.incquery.viewers.runtime.model.patterns

import "http://org.eclipse.incquery/viewmodel/traceability/1.0"
import "http://org.eclipse.incquery/viewmodel/notation/1.0"

@QueryExplorer(checked = false)
pattern param2item(param, trace : Trace, item : Item) {
	Trace.params(trace, param);
	Trace.targets(trace, item);
} or {
	Trace.objects(trace, param);
	Trace.targets(trace, item);
}

@QueryExplorer(checked = false)
pattern param2edge(source, target, trace, edge : Edge) {
	Trace.params(trace, source);
	Trace.params(trace, target);
	Trace.targets(trace, edge);
} or {
	Trace.objects(trace, source);
	Trace.params(trace, target);
	Trace.targets(trace, edge);
} or {
	Trace.params(trace, source);
	Trace.objects(trace, target);
	Trace.targets(trace, edge);
} or {
	Trace.objects(trace, source);
	Trace.objects(trace, target);
	Trace.targets(trace, edge);
}

@QueryExplorer(checked = false)
pattern param2containment(source, target, trace, containment : Containment) {
	Trace.params(trace, source);
	Trace.params(trace, target);
	Trace.targets(trace, containment);
} or {
	Trace.objects(trace, source);
	Trace.params(trace, target);
	Trace.targets(trace, containment);
} or {
	Trace.params(trace, source);
	Trace.objects(trace, target);
	Trace.targets(trace, containment);
} or {
	Trace.objects(trace, source);
	Trace.objects(trace, target);
	Trace.targets(trace, containment);
}

@QueryExplorer(checked = false)
pattern children(parent:Item, child:Item) {
	Containment.source(c, parent);
	Containment.target(c, child);
}

